# -*- coding: utf-8 -*-
"""FUTURE_DS_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1thljfEnYbI6mzT_xgCs-1SzUbJGqeVQO

# **ðŸ“Œ Task 1: Social Media Trend Analysis**


---


In this task, we analyze social media posts to identify trending topics and understand public sentiment.  

The goal is to:
- Discover common keywords and themes from social media text.
- Perform sentiment analysis to gauge user opinions.
- Analyze engagement metrics (likes, retweets) and temporal trends.  

This analysis helps businesses monitor public interests, improve content strategies, and make informed decisions based on real-time social media data.
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
from textblob import TextBlob
import nltk
import re
nltk.download('punkt')

# Load CSV file
df = pd.read_csv('/content/drive/MyDrive/twitter_dataset.csv')

# Preview data
print(df.head())
print(df.info())

def clean_text(text):
    text = re.sub(r"http\S+|www\S+|https\S+", '', text, flags=re.MULTILINE)
    text = re.sub(r'\@\w+|\#','', text)
    text = re.sub(r'[^A-Za-z\s]', '', text)
    text = text.lower()
    return text

df['Clean_Text'] = df['Text'].apply(clean_text)

def get_sentiment(text):
    analysis = TextBlob(text)
    if analysis.sentiment.polarity > 0:
        return 'Positive'
    elif analysis.sentiment.polarity == 0:
        return 'Neutral'
    else:
        return 'Negative'

df['Sentiment'] = df['Clean_Text'].apply(get_sentiment)

text_combined = ' '.join(df['Clean_Text'].tolist())
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text_combined)

plt.figure(figsize=(10, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('Word Cloud of Trending Topics')
plt.show()

sns.countplot(data=df, x='Sentiment',hue='Sentiment', palette='Set2')
plt.title('Sentiment Distribution')
plt.xlabel('Sentiment')
plt.ylabel('Number of Tweets')
plt.show()

# Average likes and retweets by sentiment
engagement_stats = df.groupby('Sentiment')[['Likes', 'Retweets']].mean().reset_index()

print(engagement_stats)

# Plot
engagement_stats.plot(x='Sentiment', kind='bar', figsize=(8, 5), colormap='Pastel1')
plt.title('Average Engagement by Sentiment')
plt.ylabel('Average Count')
plt.xticks(rotation=0)
plt.grid(axis='y')
plt.show()

top_users = df.sort_values(by=['Likes', 'Retweets'], ascending=False).head(5)
print(top_users[['Username', 'Likes', 'Retweets', 'Text']])

df['Timestamp'] = pd.to_datetime(df['Timestamp'])
df['Month'] = df['Timestamp'].dt.to_period('M')

monthly_sentiment = df.groupby(['Month', 'Sentiment']).size().unstack().fillna(0)
monthly_sentiment.plot(kind='line', figsize=(10, 6), marker='o')
plt.title('Monthly Sentiment Trends')
plt.ylabel('Tweet Count')
plt.xlabel('Month')
plt.grid(True)
plt.show()

"""**Recommendation**:  
To harness the power of social media insights, businesses should:
- Monitor emerging topics in real time to align marketing strategies.
- Tailor content to promote positive engagement and reduce negative sentiment.
- Leverage data to identify potential brand ambassadors or community influencers.
"""